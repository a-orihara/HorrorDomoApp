class Api::V1::User::ConfirmationsController < ApplicationController
  # 1.1
  def update
    user = User.find_by(confirmation_token: params[:confirmation_token])
    logger.info "ここのuser!: #{user.inspect}"
    # 1.2 404
    return render json: { message: "ユーザーが見つかりません" }, status: :not_found if user.nil?
    # 1.3 422
    return render json: { message: "ユーザーはすでに認証されています" }, status: :unprocessable_entity if user.confirmed?

    # 1.4
    user.update!(confirmed_at: Time.current)
    render json: { message: "ユーザーアカウント認証に成功しました" }, status: :ok
  end
end

=begin
@          @@          @@          @@          @@          @@          @@          @@          @
1.1
. **`User.find_by(confirmation_token: params[:confirmation_token])`の挙動と使用意図**:
- この行は、データベース内の`users`テーブルから、パラメーターで渡された`confirmation_token`に一致するユーザー
を検索します。
- 使用意図は、ユーザーがアカウント確認リンクをクリックした時に、そのリンクに含まれるトークンを用いて対応するユーザ
ーを特定し、そのユーザーのアカウントを有効化することです。

================================================================================================
1.2
. **`status: :not_found if user.nil?`の挙動と使用意図**:
- この行は、検索した結果、該当するユーザーがデータベースに存在しない場合（`user`が`nil`の場合）、
`404 Not Found`ステータスコードを持つJSONレスポンスを返します。
- 使用意図は、無効なまたは存在しない確認トークンが提供された場合に、クライアント（フロントエンド）に対して適切なエ
ラーメッセージを返し、リクエストが失敗したことを通知することです。

================================================================================================
1.3
. **`status: :bad_request if user.confirmed?`の挙動と使用意図**:
- この行は、該当するユーザーがすでにアカウントを確認（`confirmed`）している場合に、`400 Bad Request`ステータ
スコードを持つJSONレスポンスを返します。
- 使用意図は、ユーザーが既に確認されている場合（つまり、アカウントがすでにアクティブである場合）に、重複した確認リ
クエストを無効にし、クライアントに適切なフィードバックを提供することです。
------------------------------------------------------------------------------------------------
422のステータスコードは、クライアントからのリクエストが受け入れられず、サーバーがリクエストを処理できない場合に使用
されます。具体的なケースとしては、リクエストが正当であるが、リソースの状態がリクエストに適合しない場合や、バリデーシ
ョンエラーが発生した場合に適しています。

================================================================================================
1.4
**Devise `confirmed_at` による `confirm` 認証:**.
- Deviseでは、データベースの `confirmed_at` 属性にタイムスタンプ（日付と時刻）がある場合、ユーザーは確認された
とみなされます。この属性はユーザー作成時のデフォルトではNULLです。
- 確認プロセスでは、ユーザが確認リンクをクリックしてトークンが認証されると、`confirmed_at`属性に現在の日時が設定
されます。
- その時点から、ユーザーはDeviseによって確認されたとみなされます

=end
