class DeviseTokenAuthCreateUsers < ActiveRecord::Migration[6.1]
  def change

    create_table(:users) do |t|
      ## 1 Required
      t.string :provider, :null => false, :default => "email"
      t.string :uid, :null => false, :default => ""

      ## 2 Database authenticatable
      t.string :encrypted_password, :null => false, :default => ""

      ## 3 Recoverable
      t.string   :reset_password_token
      t.datetime :reset_password_sent_at
      t.boolean  :allow_password_change, :default => false

      ## 4 Rememberable
      t.datetime :remember_created_at

      ## 5 Confirmable
      t.string   :confirmation_token
      t.datetime :confirmed_at
      t.datetime :confirmation_sent_at
      t.string   :unconfirmed_email # Only if using reconfirmable

      ## 6 Lockable
      # t.integer  :failed_attempts, :default => 0, :null => false # Only if lock strategy is :failed_attempts
      # t.string   :unlock_token # Only if unlock strategy is :email or :both
      # t.datetime :locked_at

      ## 7 User Info
      t.string :name
      # t.string :nickname
      # t.string :image
      t.string :email

      ## 8 Tokens
      t.text :tokens

      t.timestamps
    end

    add_index :users, :email,                unique: true
    add_index :users, [:uid, :provider],     unique: true
    add_index :users, :reset_password_token, unique: true
    add_index :users, :confirmation_token,   unique: true
    # add_index :users, :unlock_token,         unique: true
  end
end

=begin
@          @@          @@          @@          @@          @@          @@          @@          @
1

Required
providerとuidの2つのカラムを必須とする機能です。providerは認証プロバイダーを示す文字列、uidはそのプロバイダー
によって割り当てられた識別子を示します。
この機能は、API認証のためにOAuthやOpenID Connectなどの認証プロバイダーを使用する場合に特に役立ちます。これらの
認証プロバイダーを使用すると、アプリケーションがユーザーのパスワードを保存する必要がなくなり、セキュリティリスクが
軽減されます。
DeviseTokenAuthでは、providerとuidが必須のため、これらの値が存在しない場合は認証が失敗します。また、これらの
値は、ユーザーが作成されるときに自動的に生成されます。
------------------------------------------------------------------------------------------------
provider
ユーザーがどのような方法でアプリケーションにアクセスするかを示します。デフォルト値はemail。
------------------------------------------------------------------------------------------------
uid
アプリケーションにアクセスするためのユーザーの識別子です。これは、通常、ユーザーのメールアドレスや、OAuthプロバイ
ダーから提供される識別子などが使用されます。
================================================================================================
2

Database authenticatable

Deviseの認証機能の一つで、パスワードを暗号化して保存し、認証に使用する機能です。ユーザーテーブルに
encrypted_passwordカラムを追加する必要があり、パスワードを登録すると自動的にハッシュ化され保存されます。ユーザ
ーがログインすると、入力されたパスワードがハッシュ化され、保存されたパスワードと比較されます。パスワードが一致した
場合、ユーザーは認証され、トークンが発行されます。この機能により、パスワードのセキュリティを高めることができます。
トークンの発行に関する機能は、DeviseTokenAuthによって提供されます。DeviseTokenAuthは、Deviseにトークン認証
機能を追加するgemです。ユーザーがログインすると、トークンが発行され、このトークンを使用してAPIリクエストを認証で
きます。
------------------------------------------------------------------------------------------------
encrypted_password
暗号化されたパスワードを保存するためのカラムです。このカラムは、ユーザーがパスワードを変更したときに更新されます。
================================================================================================
3

Recoverable
ユーザーがパスワードを忘れた場合にリセットすることができる機能です。
ユーザーがパスワードリセットをリクエストすると、reset_password_token属性に一意のトークンが生成されます。このト
ークンを使用して、ユーザーがパスワードをリセットするためのリンクを生成することができます。
ユーザーがパスワードをリセットするためのリンクをクリックすると、ユーザーが新しいパスワードを入力できるフォームが表
示されます。このフォームで入力されたパスワードは、再び暗号化されてencrypted_password属性に保存されます。
------------------------------------------------------------------------------------------------
reset_password_token
パスワードリセットに必要なトークン。このトークンを使用してパスワードリセットを実行します。
------------------------------------------------------------------------------------------------
reset_password_sent_at
パスワードリセットのトークンが送信された日時を保持します。
------------------------------------------------------------------------------------------------
allow_password_change
パスワード変更を許可するかどうかを判断するためのブール値。デフォルトでは許可されていません。
================================================================================================
4

Rememberable
ユーザーがブラウザを閉じた後にもログイン状態を保持するための機能です。
Rememberable機能を使用するためには、モデルに:rememberableオプションを追加する必要があります。
------------------------------------------------------------------------------------------------
remember_created_at
rememberable機能を使用するときに必要となる、remember_tokenの作成日時を記録する。
================================================================================================
5

Confirmable
ユーザーがサインアップした後にメールアドレスを送信して確認を行う機能。
------------------------------------------------------------------------------------------------
:confirmation_token
確認トークンを保存するためのカラムです。ユーザーがアカウントを作成すると、自動的にランダムな確認トークンが生成され
ます。ユーザーが確認トークンをクリックすると、アカウントが確認され、:confirmed_atカラムに確認された日時が記録さ
れます。
------------------------------------------------------------------------------------------------
:confirmed_at
アカウントが確認された日時を記録するためのカラムです。ユーザーが確認トークンをクリックしたときに更新されます。
------------------------------------------------------------------------------------------------
:confirmation_sent_at
確認トークンのメールが送信された日時を記録するためのカラムです。
------------------------------------------------------------------------------------------------
:unconfirmed_email
ユーザーが変更しようとしている未確認のメールアドレスを保存するためのカラムです。このカラムはreconfirmableオプショ
ンが有効になっている場合にのみ使用されます。

================================================================================================
7

User Info
DeviseTokenAuthで定義されたUserモデルの属性（デフォは下記4つ）
------------------------------------------------------------------------------------------------
name
ユーザーのフルネームを表す文字列。この属性は必須ではありません。
------------------------------------------------------------------------------------------------
nickname
ユーザーのニックネームまたはユーザー名を表す文字列。この属性は必須ではありません。
------------------------------------------------------------------------------------------------
image
ユーザーのプロフィール画像のURLを表す文字列。この属性は必須ではありません。
------------------------------------------------------------------------------------------------
email
ユーザーのメールアドレスを表す文字列。この属性は必須です。email属性は、ユーザーがサインアップした際に使用されるプロ
バイダに関係なく、常に要求される必要があります。

================================================================================================
8

Tokens

ユーザーの認証トークン
------------------------------------------------------------------------------------------------
t.text :tokens
DeviseTokenAuthが提供するトークンベースの認証システムにおいて、複数のトークンを管理するためのカラムです。デフォ
ルトでは何の値も設定されていないため、トークンを追加するには別途コードで処理する必要があります。このカラムには、ア
クセストークンやリフレッシュトークン、その他のトークンを含めることができ、JSON形式で保存されます。
=end