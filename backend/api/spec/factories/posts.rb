# 1
FactoryBot.define do
  # 2
  factory :post do
    content { "Content" }
    title { "Title" }
    # 3 user { association :user }の省略形
    user
  end
end

=begin
@          @@          @@          @@          @@          @@          @@          @@          @
1
FactoryBot.define
FactoryBotを使用してモデルのファクトリーを定義するためのメソッド。複数のファクトリーを1つのファイルにまとめるため
に使用されます。
================================================================================================
2
FactoryBotはファクトリ名（この場合:post）から自動的にモデルクラスを推測します。
このため、ファクトリ名がモデル名と一致している場合は、クラスを指定しなくても問題ありません。
ファクトリ名が一致していない場合、class名を指定する。
factory :orange, class: Picropost
end
================================================================================================
3
association
関連するデータ（この場合User）の作成と関連付を行うメソッド。
使用する条件
.関連付けられたモデルが存在すること: FactoryBotがモデルのインスタンスを作成するためには、そのモデルクラスが必要で
す。そのモデルのクラスがアプリケーション内に存在しない場合、FactoryBotはそのファクトリを作成できません。
.関連が正しく定義されていること: モデル間の関連性は、アソシエーションとしてモデルに定義されます。これは、
has_many、belongs_to、has_one、has_and_belongs_to_manyなどのアソシエーションメソッドをモデル内で使用して定
義されます。
.関連付けられたモデルのファクトリー名が指定されていること: associationメソッドに指定するファクトリの名前は、その
ファクトリが定義された時に指定した名前と一致している必要があります。
------------------------------------------------------------------------------------------------
FactoryBotでは、定義したファクトリはグローバルスコープで利用可能です。
そのため、ファイルが異なっていても同じ名前のファクトリ（この場合:user）を参照できます。
association :userと指定することで、:userという名前のファクトリを参照しています。これはfactories/users.rbで定
義した:userのファクトリを指します。つまり、:userという名前が一意に決まっていれば、どのファイルからでもアクセスして
使用することが可能です。このため、異なるファイル間でファクトリの名前が重複しないように注意する必要があります。
------------------------------------------------------------------------------------------------
その他、userがnilの場合の書き方
user { nil }
user { nil } の user は post モデルの user アソシエーションを指しており、実際には user_id という外部
キーを表しています。
------------------------------------------------------------------------------------------------
他の書き方
外部キーを指定する方法には、単に関連するオブジェクトを生成する方法もあります。例えば、ユーザーがあらかじめ存在してい
てそのオブジェクトを使いたい場合には、以下のように書くことができます。

FactoryBot.define do
  factory :post do
    content { "MyContent" }
    user { FactoryBot.create(:user) }
  end
end

ここで user { FactoryBot.create(:user) } と書くことで、post を作成する際に新たに user も一緒に作成さ
れ、その user が post の user アソシエーションに設定されます。
=end
