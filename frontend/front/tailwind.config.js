/** @type {import('tailwindcss').Config} */
module.exports = {
  // 1.1 1.2 プロジェクトのコンテンツソースを設定する。
  content: ['./src/**/*.{js,ts,jsx,tsx}'],
  // 2 テーマの設定:プロジェクトのデフォルトテーマをカスタマイズ
  theme: {
    // 3 カスタム設定を追加
    extend: {
      colors: {
        'basic-yellow': '#F2CB05',
        'basic-orange': '#F28705',
        // 'basic-pink': '#F07171',
        'basic-pink': '#F22C5A',
        'basic-green': '#008000',
        // 'basic-purple': '#CC00CC',
        'basic-purple': '#6d4daa',
        'basic-beige': '#FBEED6',
        'hover-yellow': '#FFF33F',
        'hover-pink': '#FC1919',
        'hover-orange': '#fef08a',
        'font-color-green': '#0f7d3b',
        'font-color-black': '#25262b',
      },
    },
    // fontFamilyユーティリティを使って、テキストの書体を制御することができます。
    fontFamily: {
      // classに"font-spacemono"の設定で使用可能
      spacemono: ['Space Mono', 'monospace'],
    },
  },
  plugins: [],
};

/*
@          @@          @@          @@          @@          @@          @@          @@          @
1.1
. **Tailwind CSSの`content`セクションの解説**:
- Tailwind CSSの設定ファイルである`tailwind.config.js`内の`content`セクションは、Tailwind CSSがプロジェ
クト内のクラス名をスキャンするファイルのパスを指定する場所です。
- Tailwindは、HTML、JavaScript、その他のテンプレートファイルの中のTailwindのクラス名をスキャンして、それに応
じたCSSを生成します。
- `content`セクションに設定されたファイルパスは、Tailwindがスキャンするべきすべてのファイルを含むべきです。これ
には、HTMLテンプレート、ReactやVueなどのJavaScriptコンポーネント、その他のテンプレートファイルが含まれます。
- パスはプロジェクトのルートディレクトリからの相対パスで記述されます。これにより、Tailwindはどのファイルにスタイ
ルを適用するかを知ることができます。
- `tailwind.config.js`ファイルがプロジェクト内の独自の場所に配置されている場合でも、パスはプロジェクトのルート
からの相対パスで指定する必要があります。

================================================================================================
1.2
content: ['./src/***.{js,ts,jsx,tsx}'],
- `src`ディレクトリ以下のすべてのサブディレクトリ（`**`）にある`.js`, `.ts`, `.jsx`, `.tsx`拡張子を持つすべ
てのファイルを指しています。
- このパターンは、Tailwind CSSがJavaScriptやTypeScriptを含むReactコンポーネントファイルをスキャンして、これ
らのファイル内で使用されているTailwindのクラス名に基づいてCSSを生成することを意味します。

================================================================================================
2
テーマセクションで、プロジェクトのカラーパレット、文字スケール、フォント、ブレークポイント、ボーダー
半径の値などを定義します。

================================================================================================
3
テーマオプションのデフォルト値を維持しつつ新しい値をカスタムで追加したい場合は、設定ファイルのthemeセクションの
extend キーの下に拡張モジュール(colorsプロパティ等)を追加します。たとえば、既存のブレークポイントを保持したま
ま追加のブレークポイントを追加したい場合は、 screensプロパティを拡張します。
*/
