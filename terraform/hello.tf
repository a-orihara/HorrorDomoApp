# 1 テスト用ファイル
resource "local_file" "helloworld" {
  content  = "hello world!"
  filename = "hello.txt"
}

/*
@          @@          @@          @@          @@          @@          @@          @@          @
================================================================================================
初期化処理を実行する
Terraformインストールフォルダで「init」コマンドを実行します。

terraform init
------------------------------------------------------------------------------------------------
terraform init
これは、Terraformプロジェクトに対して少なくとも1回実行する必要があります。initプロセス中に、Terraformは必要なプ
ロバイダをダウンロードし、状態(まだ存在しない場合)を設定し、ックエンドの初期化、ローカル設定の生成、リソース作成に
必要なバイナリファイルをダウンロードなど、その他の必要な起動タスクを実行します。
------------------------------------------------------------------------------------------------
生成される主要なファイルと設定：
* .terraform ディレクトリ：
    * ダウンロードされたプロバイダプラグインや、バックエンドの状態データなどがこのディレクトリに保存されます。
* .terraform.lock.hcl ファイル：
    * 使用されるプロバイダのバージョンや、その依存関係をロックするためのファイルです。これにより、チーム間や環境間
    での挙動の一貫性が保たれます。
------------------------------------------------------------------------------------------------
Terraformは正常に初期化されました！

これでTerraformを使い始めることができます。terraform plan "を実行してみてください。を実行してみてください。すべ
てのTerraformコマンド が動作するはずです。
Terraformのモジュールやバックエンドの設定を変更した場合は、このコマンドを再実行してください、 このコマンドを再実行
して作業ディレクトリを再初期化してください。もし忘れても、他の コマンドがそれを検知し、必要であればリマインドしてく
れます。
================================================================================================
実行結果を事前確認する
terraform plan
------------------------------------------------------------------------------------------------
terraformplanコマンドでどのようなインフラ環境が構築されるのか確認することができます。
================================================================================================
Terraformでファイルを作成する
ファイルを作成するために「apply」コマンドを実行します。
terraform apply
実行するとplanコマンドと同様に変更内容が表示されたあと「Do you want to perform these actions?」と、実行を再
確認する注意メッセージが表示されます。
ここで「yes」を入力してエンターキーを押すと処理が行われます。
================================================================================================
作成されたファイルを確認する
インストールフォルダに「hello.txt」ファイルが作成されています。
ファイルを開くと「hellow world!」が書き込まれています！
*/