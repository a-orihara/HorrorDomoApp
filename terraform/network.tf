# ---------------------------------------------
# VPC
# ---------------------------------------------
# 二つ目のvpcは任意の名前
resource "aws_vpc" "vpc" {
  # VPCのCIDRブロックを設定。このIP範囲内でサブネットを作成する（string型）。
  cidr_block                       = "192.168.0.0/20"
  # 1.1 インスタンスのテナンシー設定（string型）。デフォルトは "default"。
  instance_tenancy                 = "default"
  # 1.2 DNSサポートを有効にするかどうか（真偽値型）。
  enable_dns_support               = true
  # 1.3 DNSホスト名を有効にするかどうか（ブーリアン型）。
  enable_dns_hostnames             = true
  # IPv6のCIDRブロックを自動生成するかどうか（ブーリアン型）。
  assign_generated_ipv6_cidr_block = false
  # VPCのタグを設定（マップ型）。各タグはキーと値のペア。
  tags = {
    Name    = "${var.project}-${var.environment}-vpc"
    Project = var.project
    Env     = var.environment
  }
}

/*
@          @@          @@          @@          @@          @@          @@          @@          @
1.1
- インスタンスのテナンシー設定:
- AWSにおいて、インスタンスがどのような物理的なサーバー上で実行されるかを制御します。デフォルトは "default" で、
他の多数の顧客と同じ物理サーバーを共有します。専用インスタンスを選ぶこともできます。

================================================================================================
1.2
- DNSサポートを有効にする:
- VPC内でAmazon提供のDNSサーバーを使って名前解決（DNSクエリ）を行えるようにする設定です。有効にすると、EC2インス
タンスのようなリソースがIPアドレスと名前で通信できます。

================================================================================================
1.3
- DNSホスト名を有効にする:
- VPC内でEC2インスタンスなどがDNSホスト名（例：ip-192-0-2-44）を持つことができるようになります。これが有効にな
っていると、IPアドレスだけでなくDNSホスト名でもリソースにアクセスできます。


*/
